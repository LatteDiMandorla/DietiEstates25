import {
  require_react
} from "./chunk-D2P3IO6H.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/react-interval-hook/index.mjs
var import_react = __toESM(require_react(), 1);
function h(a, t = 1e3, {
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  onFinish: d = () => {
  },
  autoStart: y = true,
  immediate: m = false,
  selfCorrecting: g = true
} = {}) {
  const c = (0, import_react.useRef)(), r = (0, import_react.useRef)(false), n = (0, import_react.useRef)(null), l = (0, import_react.useRef)(a), s = (0, import_react.useCallback)(() => {
    const e = n.current || 0;
    if (g) {
      const u = Date.now() - e, b = 1 + (u > 0 ? Math.floor(u / t) : 0);
      n.current = e + t * b, i(Math.max(t - u, 1)), l.current(b);
    } else
      i(t), l.current();
  }, [t]), i = (0, import_react.useCallback)(
    (e) => {
      c.current !== void 0 && clearTimeout(c.current), r.current ? c.current = setTimeout(s, e) : console.debug(
        "Trying to set interval timeout on inactive timer, this is no-op and probably indicates bug in your code."
      );
    },
    [s, r]
  ), p = (0, import_react.useCallback)(() => {
    const e = r.current;
    r.current = true, n.current === null && (n.current = Date.now() + t), m && !e && (n.current -= t, s()), i(t);
  }, [s, t, m, i]), T = (0, import_react.useCallback)(
    (e = true) => {
      const u = r.current;
      c.current !== void 0 && clearTimeout(c.current), r.current = false, c.current = void 0, n.current = null, u && e && d();
    },
    [d]
  ), v = (0, import_react.useCallback)(() => r.current, []);
  return (0, import_react.useEffect)(() => {
    l.current = a;
  }, [a]), (0, import_react.useEffect)(() => (y && p(), T), []), { start: p, stop: T, isActive: v };
}
export {
  h as useInterval
};
//# sourceMappingURL=react-interval-hook.js.map
